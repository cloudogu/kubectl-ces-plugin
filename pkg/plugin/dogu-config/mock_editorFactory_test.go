// Code generated by mockery v2.20.0. DO NOT EDIT.

package dogu_config

import mock "github.com/stretchr/testify/mock"

// mockEditorFactory is an autogenerated mock type for the editorFactory type
type mockEditorFactory struct {
	mock.Mock
}

type mockEditorFactory_Expecter struct {
	mock *mock.Mock
}

func (_m *mockEditorFactory) EXPECT() *mockEditorFactory_Expecter {
	return &mockEditorFactory_Expecter{mock: &_m.Mock}
}

// create provides a mock function with given fields:
func (_m *mockEditorFactory) create() (doguConfigurationEditor, error) {
	ret := _m.Called()

	var r0 doguConfigurationEditor
	var r1 error
	if rf, ok := ret.Get(0).(func() (doguConfigurationEditor, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() doguConfigurationEditor); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(doguConfigurationEditor)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// mockEditorFactory_create_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'create'
type mockEditorFactory_create_Call struct {
	*mock.Call
}

// create is a helper method to define mock.On call
func (_e *mockEditorFactory_Expecter) create() *mockEditorFactory_create_Call {
	return &mockEditorFactory_create_Call{Call: _e.mock.On("create")}
}

func (_c *mockEditorFactory_create_Call) Run(run func()) *mockEditorFactory_create_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *mockEditorFactory_create_Call) Return(_a0 doguConfigurationEditor, _a1 error) *mockEditorFactory_create_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *mockEditorFactory_create_Call) RunAndReturn(run func() (doguConfigurationEditor, error)) *mockEditorFactory_create_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTnewMockEditorFactory interface {
	mock.TestingT
	Cleanup(func())
}

// newMockEditorFactory creates a new instance of mockEditorFactory. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newMockEditorFactory(t mockConstructorTestingTnewMockEditorFactory) *mockEditorFactory {
	mock := &mockEditorFactory{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
