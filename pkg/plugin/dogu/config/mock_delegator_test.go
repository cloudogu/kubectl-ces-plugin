// Code generated by mockery v2.20.0. DO NOT EDIT.

package config

import (
	core "github.com/cloudogu/cesapp-lib/core"
	mock "github.com/stretchr/testify/mock"
)

// mockDelegator is an autogenerated mock type for the delegator type
type mockDelegator struct {
	mock.Mock
}

type mockDelegator_Expecter struct {
	mock *mock.Mock
}

func (_m *mockDelegator) EXPECT() *mockDelegator_Expecter {
	return &mockDelegator_Expecter{mock: &_m.Mock}
}

// Delegate provides a mock function with given fields: doguConfigCall
func (_m *mockDelegator) Delegate(doguConfigCall func(*core.Dogu, doguConfigurationEditor) error) error {
	ret := _m.Called(doguConfigCall)

	var r0 error
	if rf, ok := ret.Get(0).(func(func(*core.Dogu, doguConfigurationEditor) error) error); ok {
		r0 = rf(doguConfigCall)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// mockDelegator_Delegate_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Delegate'
type mockDelegator_Delegate_Call struct {
	*mock.Call
}

// Delegate is a helper method to define mock.On call
//  - doguConfigCall func(*core.Dogu , doguConfigurationEditor) error
func (_e *mockDelegator_Expecter) Delegate(doguConfigCall interface{}) *mockDelegator_Delegate_Call {
	return &mockDelegator_Delegate_Call{Call: _e.mock.On("Delegate", doguConfigCall)}
}

func (_c *mockDelegator_Delegate_Call) Run(run func(doguConfigCall func(*core.Dogu, doguConfigurationEditor) error)) *mockDelegator_Delegate_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(func(*core.Dogu, doguConfigurationEditor) error))
	})
	return _c
}

func (_c *mockDelegator_Delegate_Call) Return(_a0 error) *mockDelegator_Delegate_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *mockDelegator_Delegate_Call) RunAndReturn(run func(func(*core.Dogu, doguConfigurationEditor) error) error) *mockDelegator_Delegate_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTnewMockDelegator interface {
	mock.TestingT
	Cleanup(func())
}

// newMockDelegator creates a new instance of mockDelegator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newMockDelegator(t mockConstructorTestingTnewMockDelegator) *mockDelegator {
	mock := &mockDelegator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
