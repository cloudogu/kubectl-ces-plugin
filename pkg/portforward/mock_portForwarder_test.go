// Code generated by mockery v2.20.0. DO NOT EDIT.

package portforward

import mock "github.com/stretchr/testify/mock"

// mockPortForwarder is an autogenerated mock type for the portForwarder type
type mockPortForwarder struct {
	mock.Mock
}

type mockPortForwarder_Expecter struct {
	mock *mock.Mock
}

func (_m *mockPortForwarder) EXPECT() *mockPortForwarder_Expecter {
	return &mockPortForwarder_Expecter{mock: &_m.Mock}
}

// ForwardPorts provides a mock function with given fields:
func (_m *mockPortForwarder) ForwardPorts() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// mockPortForwarder_ForwardPorts_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ForwardPorts'
type mockPortForwarder_ForwardPorts_Call struct {
	*mock.Call
}

// ForwardPorts is a helper method to define mock.On call
func (_e *mockPortForwarder_Expecter) ForwardPorts() *mockPortForwarder_ForwardPorts_Call {
	return &mockPortForwarder_ForwardPorts_Call{Call: _e.mock.On("ForwardPorts")}
}

func (_c *mockPortForwarder_ForwardPorts_Call) Run(run func()) *mockPortForwarder_ForwardPorts_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *mockPortForwarder_ForwardPorts_Call) Return(_a0 error) *mockPortForwarder_ForwardPorts_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *mockPortForwarder_ForwardPorts_Call) RunAndReturn(run func() error) *mockPortForwarder_ForwardPorts_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTnewMockPortForwarder interface {
	mock.TestingT
	Cleanup(func())
}

// newMockPortForwarder creates a new instance of mockPortForwarder. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newMockPortForwarder(t mockConstructorTestingTnewMockPortForwarder) *mockPortForwarder {
	mock := &mockPortForwarder{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
